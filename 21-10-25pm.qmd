## Lecture 9: Containerisation with Docker

- Note Docker is only one tool for containersiation - HPCs typically use others.

- Sort of an extension to virtual environments, allowing access to system level libraries. One step down from an entire virtual machine.

- Containers are lightweight versions of virtual machines, utilising the host's Linux kernel. Virtual machines come with their own kernel (hence more heavyweight, uses more storage, takes longer to run etc.)

- A container image is the template or 'recipe' for a container, providing instructions to start a running copy of the container.

- Is basically lets you define once what the very specific requirements for a package are, and keep this constant no matter what changes occur to the host operating system.



### Docker glossary
- Container: self contained computational environment - docker run is command line argument for this.

- Image: read-only set of layers containing files / libraries / deps needed to run software. Created with docker build.

- Dockerfile: a textfile describing the commands to build your environment. Sort of like github actions workflow.

- Docker repo: a server that stores and lets you distribute Docker images e.g Docker hub.

- Typical workflow: dockerfile -> docker build -> image -> docker run / push -> container / rep


### Uses
- Say you want to compare various versions of pytorch - can find official pytorch image on Docker hub and download each version as separate image that won't interfere with each other.

- Very good way to keep software running indefinetly - don't need to worry about maintainence and updated dependencies etc. Good for reproducability.

- Good for maintaining developement environments acorss multipls OS.

- Not well suited to HPCs


### Docker CLI
- recommended to use Docker Desktop, which also gives access to CLI.

- docker container and docker image are used to manage containers and container images respectively.

- images and containers can take up a lot of disk space, docker prune cleans this up.

- docker ps and docker container ls give info on currently running containers.

- docker image pull downloads from image from internet. It is always recommended to look on Docker Hub and find the official recommended version of the container you're looking for.

- docker image ls lists docker container images on your computer. 

- docker container run create and start a container from an image.

- docker container run -it runs the container interactively. Makes it like running normal terminal/bash on your laptop.


### Docker Hub
- Similar to packaged files, images have multiple versions, indicated by tags.

- OWNER/CONTAINER_IMAGE_NAME:TAG.

- Default tag is 'latest'.


### Dockerfiles
- Specify the content of a container image and build with docker image build.

- If you want files to be available in the image, you need to specify this using something called mounts. This allows reading and writing to the host computers workspace. For large data sets, you should archive the data somewhere else and include instructions for the download of this data. Including the data in the image can make it unecessarily large.

- Dockerfiles can include files from the Docker host using the COPY instruction.

- Useful instructions:
    - FROM python:3.8-slim (specificies base image)

    - RUN apt-get update && apt-get install -y etc (run standard linux commands. Only use one run command and chain together with && commands)

    - good to use --no-install-recommends with RUN to reduce size further.

    - RUN python -m pip install --upgrade pip (just another example of RUN)

    - COPY . . (copies explicitly the current directory on the host to the current working directory on the image)

    - RUN commands only run when creating the image itself, CMD is used to actually run something everytime the image is used. 


- Choosing the base image is non-trivial - choose the most specific base image you can that still allows you to do what you need. e.g if your using pytorch, use pytorch base image, not python and then install pytorch.


### Apptainer
- Alternative to Docker.

- Very recently changed name fom Singularity.

- Better suited to HPC systems

- Can run or build from Docker images.

- Apptainer can access files in the host OS by default - less isolated.

- Easier to interface with GPUs, MPI, and system level modules.






